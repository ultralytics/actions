# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

name: Test Retry Action
permissions:
  contents: read
on:
  pull_request:
    paths:
      - ".github/workflows/test-retry.yml"
      - "retry/action.yml"
  workflow_dispatch:

jobs:
  test-bash:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test successful command
        uses: ultralytics/actions/retry@main
        with:
          run: |
            echo "This should succeed first try"
            true

      - name: Test retry with eventual success
        uses: ultralytics/actions/retry@main
        continue-on-error: true
        env:
          TEST_VAR: "hello"
        with:
          retries: 2
          retry_delay_seconds: 5
          run: |
            echo "Running attempt with TEST_VAR=$TEST_VAR"
            exit 1

      - name: Test multi-line failure
        uses: ultralytics/actions/retry@main
        continue-on-error: true
        env:
          TEST_VAR: "hello"
        with:
          retries: 2
          retry_delay_seconds: 5
          run: |
            echo "Running line 1 with TEST_VAR=$TEST_VAR"
            echo "Running line 2 with TEST_VAR=$TEST_VAR"
            false

  test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test successful Python command
        uses: ultralytics/actions/retry@main
        with:
          shell: python
          run: |
            print("This should succeed first try")

      - name: Test Python retry with eventual success
        uses: ultralytics/actions/retry@main
        continue-on-error: true
        env:
          TEST_VAR: "hello"
        with:
          shell: python
          retries: 2
          retry_delay_seconds: 5
          run: |
            import os
            print(f"Running attempt with TEST_VAR={os.environ.get('TEST_VAR')}")
            raise Exception("Forced failure")

      - name: Test Python multi-line failure
        uses: ultralytics/actions/retry@main
        continue-on-error: true
        env:
          TEST_VAR: "hello"
        with:
          shell: python
          retries: 2
          retry_delay_seconds: 5
          run: |
            import os
            print(f"Running line 1 with TEST_VAR={os.environ.get('TEST_VAR')}")
            print(f"Running line 2 with TEST_VAR={os.environ.get('TEST_VAR')}")
            assert False, "Forced assertion error"
